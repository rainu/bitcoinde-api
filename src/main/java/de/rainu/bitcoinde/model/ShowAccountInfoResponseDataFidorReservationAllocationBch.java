/*
 * bitcoin.de API
 * This specification describe the public api of bitcoin.de
 *
 * OpenAPI spec version: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package de.rainu.bitcoinde.model;

import com.fasterxml.jackson.annotation.JsonProperty;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.util.Objects;

/**
 * Infos zur BCH-Aufteilung
 */
@ApiModel(description = "Infos zur BCH-Aufteilung")
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2017-10-10T20:05:46.672+02:00")
public class ShowAccountInfoResponseDataFidorReservationAllocationBch {
  @JsonProperty("percent")
  private String percent = null;

  @JsonProperty("max_eur_volume")
  private String maxEurVolume = null;

  @JsonProperty("eur_volume_open_orders")
  private String eurVolumeOpenOrders = null;

  public ShowAccountInfoResponseDataFidorReservationAllocationBch percent(String percent) {
    this.percent = percent;
    return this;
  }

   /**
   * Prozentuale Aufteilung der noch verfügbaren Reservierung
   * @return percent
  **/
  @ApiModelProperty(example = "null", value = "Prozentuale Aufteilung der noch verfügbaren Reservierung")
  public String getPercent() {
    return percent;
  }

  public void setPercent(String percent) {
    this.percent = percent;
  }

  public ShowAccountInfoResponseDataFidorReservationAllocationBch maxEurVolume(String maxEurVolume) {
    this.maxEurVolume = maxEurVolume;
    return this;
  }

   /**
   * Max. Betrag zur Hervorhebung von Kaufanfragen
   * @return maxEurVolume
  **/
  @ApiModelProperty(example = "null", value = "Max. Betrag zur Hervorhebung von Kaufanfragen")
  public String getMaxEurVolume() {
    return maxEurVolume;
  }

  public void setMaxEurVolume(String maxEurVolume) {
    this.maxEurVolume = maxEurVolume;
  }

  public ShowAccountInfoResponseDataFidorReservationAllocationBch eurVolumeOpenOrders(String eurVolumeOpenOrders) {
    this.eurVolumeOpenOrders = eurVolumeOpenOrders;
    return this;
  }

   /**
   * Akt. verwendeter Betrag zur Hervorhebung von Kaufanfragen
   * @return eurVolumeOpenOrders
  **/
  @ApiModelProperty(example = "null", value = "Akt. verwendeter Betrag zur Hervorhebung von Kaufanfragen")
  public String getEurVolumeOpenOrders() {
    return eurVolumeOpenOrders;
  }

  public void setEurVolumeOpenOrders(String eurVolumeOpenOrders) {
    this.eurVolumeOpenOrders = eurVolumeOpenOrders;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ShowAccountInfoResponseDataFidorReservationAllocationBch showAccountInfoResponseDataFidorReservationAllocationBch = (ShowAccountInfoResponseDataFidorReservationAllocationBch) o;
    return Objects.equals(this.percent, showAccountInfoResponseDataFidorReservationAllocationBch.percent) &&
        Objects.equals(this.maxEurVolume, showAccountInfoResponseDataFidorReservationAllocationBch.maxEurVolume) &&
        Objects.equals(this.eurVolumeOpenOrders, showAccountInfoResponseDataFidorReservationAllocationBch.eurVolumeOpenOrders);
  }

  @Override
  public int hashCode() {
    return Objects.hash(percent, maxEurVolume, eurVolumeOpenOrders);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ShowAccountInfoResponseDataFidorReservationAllocationBch {\n");
    
    sb.append("    percent: ").append(toIndentedString(percent)).append("\n");
    sb.append("    maxEurVolume: ").append(toIndentedString(maxEurVolume)).append("\n");
    sb.append("    eurVolumeOpenOrders: ").append(toIndentedString(eurVolumeOpenOrders)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
  
}

