/*
 * bitcoin.de API
 * This specification describe the public api of bitcoin.de
 *
 * OpenAPI spec version: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package de.rainu.bitcoinde.model;

import java.util.Objects;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import io.swagger.annotations.ApiModelProperty;

/**
 * ShowOrderbookResponseOrders
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2017-08-30T20:00:51.287+02:00")
public class ShowOrderbookResponseOrders {
  @JsonProperty("order_id")
  private String orderId = null;

  @JsonProperty("type")
  private BuyOrSell type = null;

  /**
   * Handelspaar
   */
  public enum TradingPairEnum {
    BTCEUR("btceur"),
    
    BCHEUR("bcheur");

    private String value;

    TradingPairEnum(String value) {
      this.value = value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static TradingPairEnum fromValue(String text) {
      for (TradingPairEnum b : TradingPairEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }
  }

  @JsonProperty("trading_pair")
  private TradingPairEnum tradingPair = null;

  @JsonProperty("max_amount")
  private Float maxAmount = null;

  @JsonProperty("min_amount")
  private Float minAmount = null;

  @JsonProperty("price")
  private Float price = null;

  @JsonProperty("max_volume")
  private Float maxVolume = null;

  @JsonProperty("min_volume")
  private Float minVolume = null;

  @JsonProperty("order_requirements_fullfilled")
  private Boolean orderRequirementsFullfilled = null;

  @JsonProperty("trading_partner_information")
  private TradingPartner tradingPartnerInformation = null;

  @JsonProperty("order_requirements")
  private OrderRequirement orderRequirements = null;

  public ShowOrderbookResponseOrders orderId(String orderId) {
    this.orderId = orderId;
    return this;
  }

   /**
   * ID des Angebots
   * @return orderId
  **/
  @ApiModelProperty(example = "null", value = "ID des Angebots")
  public String getOrderId() {
    return orderId;
  }

  public void setOrderId(String orderId) {
    this.orderId = orderId;
  }

  public ShowOrderbookResponseOrders type(BuyOrSell type) {
    this.type = type;
    return this;
  }

   /**
   * Get type
   * @return type
  **/
  @ApiModelProperty(example = "null", value = "")
  public BuyOrSell getType() {
    return type;
  }

  public void setType(BuyOrSell type) {
    this.type = type;
  }

  public ShowOrderbookResponseOrders tradingPair(TradingPairEnum tradingPair) {
    this.tradingPair = tradingPair;
    return this;
  }

   /**
   * Handelspaar
   * @return tradingPair
  **/
  @ApiModelProperty(example = "null", value = "Handelspaar")
  public TradingPairEnum getTradingPair() {
    return tradingPair;
  }

  public void setTradingPair(TradingPairEnum tradingPair) {
    this.tradingPair = tradingPair;
  }

  public ShowOrderbookResponseOrders maxAmount(Float maxAmount) {
    this.maxAmount = maxAmount;
    return this;
  }

   /**
   * Maximal handelbare BTC-Menge
   * @return maxAmount
  **/
  @ApiModelProperty(example = "null", value = "Maximal handelbare BTC-Menge")
  public Float getMaxAmount() {
    return maxAmount;
  }

  public void setMaxAmount(Float maxAmount) {
    this.maxAmount = maxAmount;
  }

  public ShowOrderbookResponseOrders minAmount(Float minAmount) {
    this.minAmount = minAmount;
    return this;
  }

   /**
   * Mindestens handelbare BTC-Menge
   * @return minAmount
  **/
  @ApiModelProperty(example = "null", value = "Mindestens handelbare BTC-Menge")
  public Float getMinAmount() {
    return minAmount;
  }

  public void setMinAmount(Float minAmount) {
    this.minAmount = minAmount;
  }

  public ShowOrderbookResponseOrders price(Float price) {
    this.price = price;
    return this;
  }

   /**
   * Preis pro BTC in Euro
   * @return price
  **/
  @ApiModelProperty(example = "null", value = "Preis pro BTC in Euro")
  public Float getPrice() {
    return price;
  }

  public void setPrice(Float price) {
    this.price = price;
  }

  public ShowOrderbookResponseOrders maxVolume(Float maxVolume) {
    this.maxVolume = maxVolume;
    return this;
  }

   /**
   * Max. Euro-Volumen der Order
   * @return maxVolume
  **/
  @ApiModelProperty(example = "null", value = "Max. Euro-Volumen der Order")
  public Float getMaxVolume() {
    return maxVolume;
  }

  public void setMaxVolume(Float maxVolume) {
    this.maxVolume = maxVolume;
  }

  public ShowOrderbookResponseOrders minVolume(Float minVolume) {
    this.minVolume = minVolume;
    return this;
  }

   /**
   * Min. Euro-Volumen der Order
   * @return minVolume
  **/
  @ApiModelProperty(example = "null", value = "Min. Euro-Volumen der Order")
  public Float getMinVolume() {
    return minVolume;
  }

  public void setMinVolume(Float minVolume) {
    this.minVolume = minVolume;
  }

  public ShowOrderbookResponseOrders orderRequirementsFullfilled(Boolean orderRequirementsFullfilled) {
    this.orderRequirementsFullfilled = orderRequirementsFullfilled;
    return this;
  }

   /**
   * Zeigt an, ob das Angebot bedient werden könnte oder nicht (Trust-Level, KYC-Full, Sitz der Bank etc.).
   * @return orderRequirementsFullfilled
  **/
  @ApiModelProperty(example = "null", value = "Zeigt an, ob das Angebot bedient werden könnte oder nicht (Trust-Level, KYC-Full, Sitz der Bank etc.).")
  public Boolean getOrderRequirementsFullfilled() {
    return orderRequirementsFullfilled;
  }

  public void setOrderRequirementsFullfilled(Boolean orderRequirementsFullfilled) {
    this.orderRequirementsFullfilled = orderRequirementsFullfilled;
  }

  public ShowOrderbookResponseOrders tradingPartnerInformation(TradingPartner tradingPartnerInformation) {
    this.tradingPartnerInformation = tradingPartnerInformation;
    return this;
  }

   /**
   * Infos zum User des Angebots
   * @return tradingPartnerInformation
  **/
  @ApiModelProperty(example = "null", value = "Infos zum User des Angebots")
  public TradingPartner getTradingPartnerInformation() {
    return tradingPartnerInformation;
  }

  public void setTradingPartnerInformation(TradingPartner tradingPartnerInformation) {
    this.tradingPartnerInformation = tradingPartnerInformation;
  }

  public ShowOrderbookResponseOrders orderRequirements(OrderRequirement orderRequirements) {
    this.orderRequirements = orderRequirements;
    return this;
  }

   /**
   * Get orderRequirements
   * @return orderRequirements
  **/
  @ApiModelProperty(example = "null", value = "")
  public OrderRequirement getOrderRequirements() {
    return orderRequirements;
  }

  public void setOrderRequirements(OrderRequirement orderRequirements) {
    this.orderRequirements = orderRequirements;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ShowOrderbookResponseOrders showOrderbookResponseOrders = (ShowOrderbookResponseOrders) o;
    return Objects.equals(this.orderId, showOrderbookResponseOrders.orderId) &&
        Objects.equals(this.type, showOrderbookResponseOrders.type) &&
        Objects.equals(this.tradingPair, showOrderbookResponseOrders.tradingPair) &&
        Objects.equals(this.maxAmount, showOrderbookResponseOrders.maxAmount) &&
        Objects.equals(this.minAmount, showOrderbookResponseOrders.minAmount) &&
        Objects.equals(this.price, showOrderbookResponseOrders.price) &&
        Objects.equals(this.maxVolume, showOrderbookResponseOrders.maxVolume) &&
        Objects.equals(this.minVolume, showOrderbookResponseOrders.minVolume) &&
        Objects.equals(this.orderRequirementsFullfilled, showOrderbookResponseOrders.orderRequirementsFullfilled) &&
        Objects.equals(this.tradingPartnerInformation, showOrderbookResponseOrders.tradingPartnerInformation) &&
        Objects.equals(this.orderRequirements, showOrderbookResponseOrders.orderRequirements);
  }

  @Override
  public int hashCode() {
    return Objects.hash(orderId, type, tradingPair, maxAmount, minAmount, price, maxVolume, minVolume, orderRequirementsFullfilled, tradingPartnerInformation, orderRequirements);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ShowOrderbookResponseOrders {\n");
    
    sb.append("    orderId: ").append(toIndentedString(orderId)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("    tradingPair: ").append(toIndentedString(tradingPair)).append("\n");
    sb.append("    maxAmount: ").append(toIndentedString(maxAmount)).append("\n");
    sb.append("    minAmount: ").append(toIndentedString(minAmount)).append("\n");
    sb.append("    price: ").append(toIndentedString(price)).append("\n");
    sb.append("    maxVolume: ").append(toIndentedString(maxVolume)).append("\n");
    sb.append("    minVolume: ").append(toIndentedString(minVolume)).append("\n");
    sb.append("    orderRequirementsFullfilled: ").append(toIndentedString(orderRequirementsFullfilled)).append("\n");
    sb.append("    tradingPartnerInformation: ").append(toIndentedString(tradingPartnerInformation)).append("\n");
    sb.append("    orderRequirements: ").append(toIndentedString(orderRequirements)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
  
}

